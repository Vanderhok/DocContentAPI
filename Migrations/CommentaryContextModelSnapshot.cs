// <auto-generated />
using System;
using DocContentAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DocContentAPI.Migrations
{
    [DbContext(typeof(CommentaryContext))]
    partial class CommentaryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DocContentAPI.Models.Commentary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Changed")
                        .HasColumnType("int");

                    b.Property<int>("Cid")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocId")
                        .HasColumnType("int");

                    b.Property<bool>("Noactive")
                        .HasColumnType("bit");

                    b.Property<int>("Notificated")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentCommentaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Pos")
                        .HasColumnType("int");

                    b.Property<bool>("Preactive")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentCommentaryId");

                    b.ToTable("Commentaries");
                });

            modelBuilder.Entity("DocContentAPI.Models.Commentary", b =>
                {
                    b.HasOne("DocContentAPI.Models.Commentary", "ParentCommentary")
                        .WithMany("Answers")
                        .HasForeignKey("ParentCommentaryId");
                });
#pragma warning restore 612, 618
        }
    }
}
